{
    "header": [
        "/** ",
        " * This file was automatically generated from the Tableau REST API Reference.",
        " * DO NOT MODIFY THIS FILE BY HAND. instead edit the metadata and/or code generator",
        " * and regenerate any files",
        " */",
        ""
    ],
    "code": {},
    "reference": {
        "overrides": {
            "appendToFileUpload": {
                "requestBody": "--12f71d3d4ae441caa0b38a5d4e0bde5e Content-Disposition: name=\"request_payload\" Content-Type: text/xml --12f71d3d4ae441caa0b38a5d4e0bde5e Content-Disposition: name=\"tableau_file\"; filename=\"FILE-NAME\" Content-Type: application/octet-stream <content here, with line break before boundary delimiter>                 --12f71d3d4ae441caa0b38a5d4e0bde5e--",
                "requestBodyType": "",
                "requestContentType": "multipart/mixed"
            },
            "createWebhook": { "version": "3.6" },
            "deleteWebhook": { "version": "3.6", "requestBodyExpected": false },
            "getWebhook": { "version": "3.6" },
            "listWebhooksForSite": { "version": "3.6" },
            "testWebhook": { "version": "3.6", "requestBodyExpected": false },
            "updateWebhook": { "version": "3.8" },
            "getCurrentServerSession": { "version": "3.1" },
            "updateDataInHyperConnection": {
                "requestBodyType": "actions",
                "responseBodyType": "job",
                "version": "2021.2"
            },
            "updateDataInHyperDataSource": {
                "requestBodyType": "actions",
                "responseBodyType": "job",
                "version": "2021.2"
            },
            "updateDataSourceNow": {
                "requestBodyType": "empty"
            },
            "runExtractRefreshTask": {
                "requestBodyType": "empty"
            },
            "deleteServerSession": {
                "requestBodyExpected": false
            },
            "deleteUsersFromSiteWithCsv": {
                "requestBody": "--boundary-string Content-Disposition: form-data; name=\"tableau_user_delete\"; filename=\"users.csv\" Content-Type: text/csv --boundary-string--",
                "requestContentType": "multipart/mixed"
            },
            "importUsersToSiteFromCsv": {
                "requestBody": "--boundary-string Content-Disposition: name=\"tableau_user_import\" Content-Type: file path_to_csv --boundary-string Content-Disposition: name=\"request_payload\" Content-Type: text/xml <tsRequest> <user name=\"user-name\" authSetting=\"auth-setting\" /><!--    more users    --></tsRequest>--boundary-string--",
                "requestBodyType": "users",
                "requestContentType": "multipart/mixed"
            },
            "updateWorkbookNow": { "requestBodyType": "empty" },
            "runFlowNow1": { "methodName": "runLinkedTaskNow" },
            "addDatabasePerms": { "methodName": "addDatabasePermissions" },
            "addTablePerms": { "methodName": "addTablePermissions" },
            "queryTablePerms": { "methodName": "queryTablePermissions" },
            "addDqw": { "methodName": "addDataQualityWarning" },
            "addDqwTrigger": { "methodName": "addDataQualityWarningTrigger" },
            "addDqwCertification": { "methodName": "addDataQualityWarningCertification" },
            "batchAddDqws": { "methodName": "batchAddDataQualityWarnings" },
            "batchDeleteDqws": { "methodName": "batchDeleteDataQualityWarnings" },
            "deleteDqw": { "methodName": "deleteDataQualityWarning" },
            "deleteDqws": { "methodName": "deleteDataQualityWarnings" },
            "deleteDqwCertification": { "methodName": "deleteDataQualityWarningCertification" },
            "deleteDqwCertifications": { "methodName": "deleteDataQualityWarningCertifications" },
            "deleteDqwTrigger": { "methodName": "deleteDataQualityWarningTrigger" },
            "deleteDqwTriggers": { "methodName": "deleteDataQualityWarningTriggers" },
            "queryDqw": { "methodName": "queryDataQualityWarning" },
            "queryDqws": { "methodName": "queryDataQualityWarnings" },
            "queryDqwCertification": { "methodName": "queryDataQualityWarningCertification" },
            "queryDqwCertifications": { "methodName": "queryDataQualityWarningCertifications" },
            "queryDqwTrigger": { "methodName": "queryDataQualityWarningTrigger" },
            "queryDqwTriggers": { "methodName": "queryDataQualityWarningTriggers" },
            "queryDqwTriggers1": { "methodName": "queryQualityWarningTrigger" },
            "updateDqw": { "methodName": "updateDataQualityWarning" },
            "updateDqwTrigger": { "methodName": "updateDataQualityWarningTrigger" },
            "refDeleteFlowFromFavorites": { "methodName": "deleteFlowFromFavorites" },
            "getXmlDatabasestables": { "methodName": "getDatabasesAndTablesFromConnection" },
            "createConnectedapp": { "methodName": "createConnectedApplication" },
            "createConnectedappSecret": { "methodName": "createConnectedApplicationSecret" },
            "deleteConnectedapp": { "methodName": "deleteConnectedApplication" },
            "deleteConnectedappSecret": { "methodName": "deleteConnectedApplicationSecret" },
            "getConnectedapp": { "methodName": "getConnectedApplication" },
            "getConnectedapps": { "methodName": "getConnectedApplications" },
            "getConnectedappSecret": { "methodName": "getConnectedApplicationSecret" },
            "updateConnectedapp": { "methodName": "updateConnectedApplicationSecret" },
            "removeUserToGroup": { "methodName": "removeUserFromGroup" },
            "queryWorkbookPermissions": { "responseBodyType": "permissions" },
            "queryViewPermissions": { "responseBodyType": "permissions" },
            "deleteTagsDatabase": { "methodName": "deleteTagsFromDatabase" },
            "deleteTagsDatabase1": { "methodName": "deleteTagsFromTable" },
            "deleteTagsDatabase2": { "methodName": "deleteTagsFromColumn"},
            "getFlowRunTask1": { "methodName": "getLinkedTask" },
            "getFlowRunTasks1": { "methodName": "getLinkedTasks"},
            "embeddingSettingsForSite": { "methodName": "getEmbeddingSettingsForSite", "responseBodyType": "site" },
            "updateSite": { "methodName": "updateEmbeddingSettingsForSite" },
            "updateSite1": { "methodName": "updateSite" },
            "getViewRecommendations": { "uri": "/api/${apiVersion}/sites/${siteId}/recommendations/?type=view" },
            "unhideViewRecommendation": { "uri": "/api/${apiVersion}/sites/${siteId}/recommendations/dismissals/?type=view" }
        },
        "linkReplacements": {
            "#Decrypt_Extracts": "#decrypt_extracts",
            "#Encrypt_Extracts": "#encrypt_extracts",
            "#Reencrypt_Extracts": "#reencrypt_extracts",
            "#Query_Flows_For_Site": "#query_flows_for_site",
            "#run_flow_now": ["#run_flow_now", "#run_flow_now1"],
            "#update_site": [ "#update_site", "#update_site1" ],
            "#delete_tags_database": [ "#delete_tags_database", "#delete_tags_database1", "#delete_tags_database2" ],
            "#get_flow_run_task": [ "#get_flow_run_task", "#get_flow_run_task1" ],
            "#get_flow_run_tasks": [ "#get_flow_run_tasks", "#get_flow_run_tasks1" ],
            "#query_dqw_triggers": [ "#query_dqw_triggers", "#query_dqw_triggers1" ]
        },
        "uriParamsReplacements": {
            "#delete_extracts_from_workbook": [
                { "name": "datasource-id", "action": "delete" },
                { "name": "workbook-id", "desc": "The LUID of the workbook containing the extract to be deleted.", "type": "path", "paramType": "string", "qsKey": "" }
            ],
            "#add_flow_permissions": [
                { "name": "datasource-id", "action": "delete" },
                { "name": "flow-id", "desc": "The ID of the flow", "type": "path", "paramType": "string", "qsKey": "" }
            ],
            "#get_flow_runs": [
                { "name": "filter-expression", "type":"query", "paramType":"string", "qsKey": "filter" }
            ],
            "#publish_flow": [
                { "name": "overwrite-flag", "type":"query", "paramType":"boolean", "qsKey": "overwrite" },
                { "name": "upload-session-id", "type": "query", "paramType": "string", "qsKey": "uploadSessionId" },
                { "name": "flow-file-type", "type": "query", "paramType": "string", "qsKey": "flowFileType" }
            ],
            "#query_flows_for_site": [
                { "name": "filter-expression", "type":"query", "paramType":"string", "qsKey": "filter" },
                { "name": "sort-expression", "type":"query", "paramType":"string", "qsKey": "sort" },
                { "name": "page-number", "type":"query", "paramType":"number", "qsKey": "pageNumber" },
                { "name": "page-size", "type":"query", "paramType":"number", "qsKey": "pageSize" }
            ],
            "#query_jobs": [
                { "name": "filter-expression", "type":"query", "paramType":"string", "qsKey": "filter" }
            ],
            "#update_flow": [
                { "name": "task-id", "action": "delete" },
                { "name": "flow-id", "desc": "The ID of the flow to update", "type": "path", "paramType": "string", "qsKey": "" }
             ],
             "#add_dqw_trigger": [
                { "name": "content-luid", "action": "delete" },
                { "name": "content-luid1", "action": "delete" },
                { "name": "content-luid2", "action": "delete" },
                { "name": "content-luid3", "action": "delete" }
             ],
             "#delete_dqw_triggers": [
                { "name": "content-luid", "action": "delete" },
                { "name": "content-luid1", "action": "delete" },
                { "name": "content-luid2", "action": "delete" },
                { "name": "content-luid3", "action": "delete" }
             ],
             "#query_dqw_triggers1": [
                { "name": "content-type", "action": "delete" }
             ],
             "#delete_dqw_certifications": [
                { "name": "indicator-id", "action": "delete" }
             ],
             "#delete_database_perms_default": [
                { "name": "group-id", "action": "delete" },
                { "name": "group-luid", "desc": "The LUID of the group to remove the default permission for", "type": "path", "paramType": "string" }
             ],
             "#delete_default_permission": [
                { "name": "site-id", "action": "delete" },
                { "name": "project-id", "action": "delete" },
                { "name": "group-id", "action": "delete" },
                { "name": "user-id", "action": "delete" },
                { "name": "site-luid", "type": "path", "paramType": "string" },
                { "name": "project-luid", "type": "path", "paramType": "string" },
                { "name": "group-luid", "type": "path", "paramType": "string" },
                { "name": "user-luid", "type": "path", "paramType": "string" }     
             ],
             "#remove_user_from_site": [
                { "name": "mapAssetsTo", "action": "delete" }
             ],
             "#update_group": [
                { "name":"AsJob-value", "type": "query", "qsKey": "asJob" }
             ],
             "#get_view_by_path": [
                { "name": "view-name", "action": "delete" },
                { "name": "filter-expression", "type": "query", "paramType": "string", "qsKey": "filter" }
             ],
             "#list_ask_data_lens_permissionss": [
                { "name": "lens-luid", "type": "path" }
             ],
             "#query_view_data": [
                { "name": "filter-value", "action": "delete" }
             ],
             "#query_view_image": [
                { "name": "filter-value", "action": "delete" }
             ],
             "#query_view_pdf": [
                { "name": "filter-value", "action": "delete" }
             ]
        },
        "pathReplacements": {
            "#delete_extracts_from_workbook": [
                {
                    "type": "text",
                    "value": "/workbookss/",
                    "replacements": [{
                        "type": "text",
                        "value": "/workbooks/"
                    }]
                }
            ],
            "#LensService_createLens": [{
                "type": "text",
                "value": "POST {server}/api/-/askdata/lenses/import",
                "replacements": [
                    { "type": "text", "value": "POST /api/-/askdata/lenses" }
                ]
            }],
            "#publish_workbook": [
                {
                    "type": "query",
                    "value": "bool",
                    "replacements": [
                        {
                            "type": "query",
                            "value": "overwrite-flag"
                        }
                    ]
                }
            ],
            "#delete_flow_permission": [
                {
                    "type": "text",
                    "value": "/capability-name/capability-mode",
                    "replacements": [
                        {
                            "type": "text",
                            "value": "/"
                        },
                        {
                            "type": "path",
                            "value": "capability-name"
                        },
                        {
                            "type": "text",
                            "value": "/"
                        },
                        {
                            "type": "path",
                            "value": "capability-mode"
                        }
                    ]
                }
            ],
            "#query_flows_for_user": [
                {
                    "type": "text",
                    "value": "GET /api/api-version/sites/site-id/users/user-id/flows",
                    "replacements": [
                        { "type": "text", "value": "GET /api/" },
                        { "type": "path", "value": "api-version" },
                        { "type": "text", "value": "/sites/" },
                        { "type": "path", "value": "site-id" },
                        { "type": "text", "value": "/users/" },
                        { "type": "path", "value": "user-id" },
                        { "type": "text", "value": "/flows" }
                    ]
                },
                {
                    "type": "text",
                    "value": "GET /api/api-version/sites/site-id/users/user-id/flows?ownedBy=isOwner&pageSize=page-size&pageNumber=page-number",
                    "replacements": [
                        { "type": "text", "value": "GET /api/" },
                        { "type": "path", "value": "api-version" },
                        { "type": "text", "value": "/sites/" },
                        { "type": "path", "value": "site-id" },
                        { "type": "text", "value": "/users/" },
                        { "type": "path", "value": "user-id" },
                        { "type": "text", "value": "/flows?ownedBy=" },
                        {
                            "type": "query",
                            "value": "isOwner",
                            "qsKey": "isOwner"
                        },
                        { "type": "text", "value": "&pageSize=" },
                        {
                            "type": "query",
                            "value": "page-size",
                            "qsKey": "pageSize"
                        },
                        { "type": "text", "value": "&pageNumber=" },
                        {
                            "type": "query",
                            "value": "page-number",
                            "qsKey": "pageNumber"
                        }
                    ]
                }
            ],
            "#create_webhook": [
                {
                    "type": "text",
                    "value": "POST /api/3.6/sites/<site-id>/webhooks",
                    "replacements": [
                        { "type": "text", "value": "POST /api/" },
                        { "type": "path", "value": "api-version" },
                        { "type": "text", "value": "/sites/" },
                        { "type": "path", "value": "site-id" },
                        { "type": "text", "value": "/webhooks/" }
                    ]
                }
            ],
            "#delete_webhook": [
                {
                    "type": "text",
                    "value": "DELETE /api/3.6/sites/<site-id>/webhooks/<webhook-id>",
                    "replacements": [
                        { "type": "text", "value": "DELETE /api/" },
                        { "type": "path", "value": "api-version" },
                        { "type": "text", "value": "/sites/" },
                        { "type": "path", "value": "site-id" },
                        { "type": "text", "value": "/webhooks/" },
                        { "type": "path", "value": "webhook-id" }
                    ]
                }
            ],
            "#get_webhook": [
                {
                    "type": "text",
                    "value": "GET /api/3.6/sites/<site-id>/webhooks/<webhook-id>",
                    "replacements": [
                        { "type": "text", "value": "GET /api/" },
                        { "type": "path", "value": "api-version" },
                        { "type": "text", "value": "/sites/" },
                        { "type": "path", "value": "site-id" },
                        { "type": "text", "value": "/webhooks/" },
                        { "type": "path", "value": "webhook-id" }
                    ]
                }
            ],
            "#list_webhooks_for_site": [
                {
                    "type": "text",
                    "value": "GET /api/3.6/sites/<site-id>/webhooks",
                    "replacements": [
                        { "type": "text", "value": "GET /api/" },
                        { "type": "path", "value": "api-version" },
                        { "type": "text", "value": "/sites/" },
                        { "type": "path", "value": "site-id" },
                        { "type": "text", "value": "/webhooks" }
                    ]
                }
            ],
            "#test_webhook": [
                {
                    "type": "text",
                    "value": "GET /api/3.6/sites/<site-id>/webhooks/<webhook-id>/test",
                    "replacements": [
                        { "type": "text", "value": "GET /api/" },
                        { "type": "path", "value": "api-version" },
                        { "type": "text", "value": "/sites/" },
                        { "type": "path", "value": "site-id" },
                        { "type": "text", "value": "/webhooks/" },
                        { "type": "path", "value": "webhook-id" },
                        { "type": "text", "value": "/test" }
                    ]
                }
            ],
            "#update_webhook": [
                {
                    "type": "text",
                    "value": "PUT /api/3.8/sites/<site-id>/webhooks/<webhook-id>",
                    "replacements": [
                        { "type": "text", "value": "PUT /api/" },
                        { "type": "path", "value": "api-version" },
                        { "type": "text", "value": "/sites/" },
                        { "type": "path", "value": "site-id" },
                        { "type": "text", "value": "/webhooks/" },
                        { "type": "path", "value": "webhook-id" }
                    ]
                }
            ],
            "#update_user_notification_preferences": [
                {
                    "type": "path",
                    "value": "api_version",
                    "replacements": [{ "type": "path", "value": "api-version" }]
                }
            ],
            "#add_dqw_trigger": [
                {
                    "type": "query",
                    "value": "content-luid",
                    "replacements": [
                        { "type": "query", "value": "filter-expression", "qsKey": "filter" }
                    ]
                }
            ],
            "#delete_dqw_triggers": [
                {
                    "type": "query",
                    "value": "content-luid",
                    "replacements": [
                        { "type": "query", "value": "filter-expression", "qsKey": "filter" }
                    ]
                }
            ],
            "#get_view_by_path": [
                {
                    "type": "query",
                    "value": "view-name",
                    "replacements": [
                        { "type": "query", "value": "filter-expression", "qsKey": "filter" }
                    ]
                }
            ],
            "#query_view_data": [
                { 
                    "type": "query",
                    "value": "filter-value",
                    "replacements": [
                        { "type": "query", "value": "view-filter-expression", "qsKey": "vf" }
                    ]
                }
            ],
            "#query_view_image": [
                { 
                    "type": "query",
                    "value": "filter-value",
                    "replacements": [
                        { "type": "query", "value": "view-filter-expression", "qsKey": "vf" }
                    ]
                }
            ],
            "#query_view_pdf": [
                { 
                    "type": "query",
                    "value": "filter-value",
                    "replacements": [
                        { "type": "query", "value": "view-filter-expression", "qsKey": "vf" }
                    ]
                }
            ]
        },
        "urlToMethodMapping": {
            "#delete_site": {
                "/api/${apiVersion}/sites/${siteId}": "Delete Site By ID",
                "/api/${apiVersion}/sites/${siteName}": { "name": "Delete Site By Name", "uri": "/api/${apiVersion}/sites/${siteName}?key=name" },
                "/api/${apiVersion}/sites/${contentUrl}": { "name": "Delete Site By Content Url", "uri": "/api/${apiVersion}/sites/${siteName}?key=contentUrl" }
            },
            "#query_site": {
                "/api/${apiVersion}/sites/${siteId}": "Query Site By ID",
                "/api/${apiVersion}/sites/${siteName}": { "name": "Query Site By Name", "uri": "/api/${apiVersion}/sites/${siteName}?key=name" },
                "/api/${apiVersion}/sites/${contentUrl}": { "name": "Query Site By Content Url", "uri": "/api/${apiVersion}/sites/${siteName}?key=contentUrl" }
            },
            "#delete_flow_permission": {
                "/api/${apiVersion}/sites/${siteId}/flows/${flowId}/permissions/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Flow Permissions For Group",
                "/api/${apiVersion}/sites/${siteId}/flows/${flowId}/permissions/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Flow Permissions For User"
            },
            "#delete_database_perms": {
                "/api/${apiVersion}/sites/${siteId}/databases/${databaseId}/permissions/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Database Permissions For User",
                "/api/${apiVersion}/sites/${siteId}/databases/${databaseId}/permissions/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Database Permissions For Group",
                "/api/${apiVersion}/sites/${siteLuid}/databases/${databaseLuid}/permissions/users/${userLuid}/${capabilityName}/${capabilityMode}": "Delete Database Permissions For User",
                "/api/${apiVersion}/sites/${siteLuid}/databases/${databaseLuid}/permissions/groups/${groupLuid}/${capabilityName}/${capabilityMode}": "Delete Database Permissions For Group"
            },
            "#delete_table_perms": {
                "/api/${apiVersion}/sites/${siteId}/tables/${tableId}/permissions/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Table Permissions For User",
                "/api/${apiVersion}/sites/${siteId}/tables/${tableId}/permissions/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Table Permissions For Group",
                "/api/${apiVersion}/sites/${siteLuid}/tables/${tableLuid}/permissions/users/${userLuid}/${capabilityName}/${capabilityMode}": "Delete Table Permissions For User",
                "/api/${apiVersion}/sites/${siteLuid}/tables/${tableLuid}/permissions/groups/${groupLuid}/${capabilityName}/${capabilityMode}": "Delete Table Permissions For Group"
            },
            "#delete_database_perms_default": {
                "/api/${apiVersion}/sites/${siteId}/databases/${databaseId}/default-permissions/tables/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Default Database Permissions For User",
                "/api/${apiVersion}/sites/${siteId}/databases/${databaseId}/default-permissions/tables/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Default Database Permissions For Group",
                "/api/${apiVersion}/sites/${siteLuid}/databases/${databaseLuid}/default-permissions/tables/users/${userLuid}/${capabilityName}/${capabilityMode}": "Delete Default Database Permissions For User",
                "/api/${apiVersion}/sites/${siteLuid}/databases/${databaseLuid}/default-permissions/tables/groups/${groupLuid}/${capabilityName}/${capabilityMode}": "Delete Default Database Permissions For Group"
            },
            "#add_default_permissions": {
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/workbooks": "Add Default Permissions For Workbooks",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/datasources": "Add Default Permissions For Datasources",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/flows": "Add Default Permissions For Flows",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/lenses": "Add Default Permissions For Lenses",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/dataroles": "Add Default Permissions For Data Roles",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/metrics": "Add Default Permissions For Metrics",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/workbooks": "Add Default Permissions For Workbooks",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/datasources": "Add Default Permissions For Datasources",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/flows": "Add Default Permissions For Flows",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/lenses": "Add Default Permissions For Lenses",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/dataroles": "Add Default Permissions For Data Roles",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/metrics": "Add Default Permissions For Metrics",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/databases": "Add Default Permissions For Databases",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/tables": "Add Default Permissions For Tables"

            },
            "#query_default_permissions": {
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/datasources": "Query Default Permissions For Datasources",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/workbooks": "Query Default Permissions For Workbooks",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/flows": "Query Default Permissions For Flows",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/lenses": "Query Default Permissions For Lenses",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/dataroles": "Query Default Permissions For Data Roles",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/metrics": "Query Default Permissions For Metrics",

                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/datasources": "Query Default Permissions For Datasources",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/workbooks": "Query Default Permissions For Workbooks",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/flows": "Query Default Permissions For Flows",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/lenses": "Query Default Permissions For Lenses",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/dataroles": "Query Default Permissions For Data Roles",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/metrics": "Query Default Permissions For Metrics",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/databases": "Query Default Permissions For Databases",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/tables": "Query Default Permissions For Tables"
            },
            "#delete_data_source_permission": {
                "/api/${apiVersion}/sites/${siteId}/datasources/${datasourceId}/permissions/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Data Source Permission For Group",
                "/api/${apiVersion}/sites/${siteId}/datasources/${datasourceId}/permissions/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Data Source Permission For User"
            },
            "#delete_project_permission": {
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/permissions/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Project Permission For Group",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/permissions/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Project Permission For User"
            },
            "#delete_default_permission": {
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/workbooks/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Default Workbook Permission For Group",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/workbooks/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Default Workbook Permission For User",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/datasources/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Default Datasource Permissions For Group",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/flows/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Default Flow Permission For Group",
                "/api/${apiVersion}/sites/${siteId}/projects/${projectId}/default-permissions/flows/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Default Flow Permission For User",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/workbooks/groups/${groupLuid}/${capabilityName}/${capabilityMode}": "Delete Default Workbook Permission For Group",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/workbooks/users/${userLuid}/${capabilityName}/${capabilityMode}": "Delete Default Workbook Permission For User",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/datasources/groups/${groupLuid}/${capabilityName}/${capabilityMode}": "Delete Default Datasource Permissions For Group",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/flows/groups/${groupLuid}/${capabilityName}/${capabilityMode}": "Delete Default Flow Permission For Group",
                "/api/${apiVersion}/sites/${siteLuid}/projects/${projectLuid}/default-permissions/flows/users/${userLuid}/${capabilityName}/${capabilityMode}": "Delete Default Flow Permission For User"
            },
            "#delete_view_permission": {
                "/api/${apiVersion}/sites/${siteId}/views/${viewId}/permissions/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete View Permission For Group",
                "/api/${apiVersion}/sites/${siteId}/views/${viewId}/permissions/users/${userId}/${capabilityName}/${capabilityMode}": "Delete View Permission For User"
            },
            "#delete_workbook_permission": {
                "/api/${apiVersion}/sites/${siteId}/workbooks/${workbookId}/permissions/groups/${groupId}/${capabilityName}/${capabilityMode}": "Delete Workbook Permission For Group",
                "/api/${apiVersion}/sites/${siteId}/workbooks/${workbookId}/permissions/users/${userId}/${capabilityName}/${capabilityMode}": "Delete Workbook Permission For User"
            },
            "#delete_ask_data_lens_permission": {
                "/api/${apiVersion}/sites/${siteLuid}/lenses/${lensLuid}/permissions/groups/${groupLuid}/${capabilityName}/${capabilityMode}": "Delete Ask Data Lens Permission For Group",
                "/api/${apiVersion}/sites/${siteLuid}/lenses/${lensLuid}/permissions/users/${userLuid}/${capabilityName}/${capabilityMode}": "Delete Ask Data Lens Permission For User"
            }
        },
        "requestMap": {
            "actions": "DataUpdateActionListType",
            "column": "ColumnListType",
            "label": "LabelType",
            "users": "UserListType"
        },
        "responseMap": {
            "dataAccelerationReport": "DataAccelerationReportType",
            "column": "ColumnListType",
            "labelList": "LabelListType",
            "label": "LabelType"
        },
        "paginatedResponseMap": {
            "columns": "ColumnListType",
            "databases": "DatabaseListType",
            "tables": "TableListType"
        },
        "definitions": {
            "labelListType": {
                "additionalProperties": false,
                "oneOf":  [
                    { "$ref": "#/definitions/labelType" },
                    { "type": "array", "items": { "$ref": "#/definitions/labelType" }}
                ]
            },
            "labelType": {
                "additionalProperties": false,
                "properties": {
                    "userDisplayName": { "type": "string" },
                    "contentId": { "type": "string" },
                    "contentType": { "type": "string" },
                    "message": { "type": "string" },
                    "value": { "type": "string" },
                    "category": { "type": "string" },
                    "active": { "type": "boolean" },
                    "elevated": { "type": "boolean" },
                    "createdAt": { "type": "boolean" },
                    "updatedAt": { "type": "string" },
                    "site": { "$ref": "#/definitions/siteType" },
                    "owner": { "$ref": "#/definitions/userType" }
                }
            },

            "columnListType": {
                "additionalProperties": false,
                "oneOf":  [
                    { "$ref": "#/definitions/columnType" },
                    { "type": "array", "items": { "$ref": "#/definitions/columnType" }}
                ]
            },
            "columnType": {
                "additionalProperties": false,
                "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "remoteType": { "type": "string" },
                    "parentTableId": { "type": "string" },
                    "nullable": { "type": "boolean" },
                    "site": { "$ref": "#/definitions/siteType" },
                    "tags": { "$ref": "#/definitions/tagListType" }
                }
            },

            "databaseListType": {
                "additionalProperties": false,
                "oneOf":  [
                    { "$ref": "#/definitions/databaseType" },
                    { "type": "array", "items": { "$ref": "#/definitions/databaseType" }}
                ]
            },

            "tableListType": {
                "additionalProperties": false,
                "oneOf":  [
                    { "$ref": "#/definitions/tableType" },
                    { "type": "array", "items": { "$ref": "#/definitions/tableType" }}
                ]
            },

            "dataUpdateActionListType": {
                "additionalProperties": false,
                "oneOf":  [
                    { "$ref": "#/definitions/dataUpdateActionType" },
                    { "type": "array", "items": { "$ref": "#/definitions/dataUpdateActionType" }}
                ]
            },
            "dataAccelerationReportType": {
                "additionalProperties": false,
                "properties": {
                    "dataAccelerationReport": {
                        "type": "array",
                        "items": { "$ref": "#/definitions/comparisonRecordType" }
                    }
                }
            },
            "comparisonRecordType": {
                "additionalProperties": false,
                "properties": {
                    "site": { "type": "string" },
                    "sheetURI": { "type": "string" },
                    "unacceleratedSessionCount": { "type": "number" },
                    "averageUnAcceleratedPLT": { "type": "number" },
                    "acceleratedSessionCount": { "type": "number" },
                    "averageAcceleratedPLT": { "type": "number" }
                }
            },
            "siteEmbeddingSettingsType": {
                "additionalProperties": false,
                "properties": {
                    "unrestrictedEmbedding": { "type": "boolean" },
                    "allowList": { "type": "string" }
                }
            }
        },
        "expressions": [
        ]
    }
}
